'use client';

import React, { useState } from 'react';
import { motion } from 'framer-motion';
import { useSecurityStore } from '../../store/securityStore';

export const PDFGenerator: React.FC = () => {
  const [isGenerating, setIsGenerating] = useState(false);
  const [isGenerated, setIsGenerated] = useState(false);
  
  const { recommendations, assessmentData, setCurrentView } = useSecurityStore();

  const generatePDF = async () => {
    setIsGenerating(true);
    
    // Simulate PDF generation
    await new Promise(resolve => setTimeout(resolve, 3000));
    
    // Create PDF content
    const pdfContent = createPDFContent();
    
    // Create and download PDF (simplified version)
    const blob = new Blob([pdfContent], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `${assessmentData.companyName || 'Security'}_Assessment_Report.txt`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
    
    setIsGenerating(false);
    setIsGenerated(true);
  };

  const createPDFContent = () => {
    const date = new Date().toLocaleDateString();
    const completedCount = recommendations.filter(r => r.completed).length;
    const highPriorityCount = recommendations.filter(r => r.priority === 'high' && !r.completed).length;
    
    return `
CYBERSECURITY ASSESSMENT REPORT
Generated by ABP Citadel InfoSec AI Assistant
Date: ${date}

EXECUTIVE SUMMARY
================
Company: ${assessmentData.companyName || 'N/A'}
Industry: ${assessmentData.industry || 'N/A'}
Company Size: ${assessmentData.companySize || 'N/A'}
Assessment Date: ${date}

CURRENT SECURITY POSTURE
========================
Firewall Protection: ${assessmentData.hasFirewall ? 'Yes' : 'No'}
Antivirus Solution: ${assessmentData.antivirusSolution || 'N/A'}
Backup Frequency: ${assessmentData.backupFrequency || 'N/A'}
Multi-Factor Authentication: ${assessmentData.mfaEnabled ? 'Enabled' : 'Disabled'}
Primary Security Concerns: ${assessmentData.biggestThreats || 'N/A'}
Compliance Requirements: ${assessmentData.complianceRequirements || 'None specified'}
Security Budget: ${assessmentData.securityBudget || 'Not specified'}

ASSESSMENT RESULTS
==================
Total Recommendations: ${recommendations.length}
High Priority Items: ${highPriorityCount}
Completed Items: ${completedCount}
Implementation Progress: ${Math.round((completedCount / recommendations.length) * 100)}%

DETAILED RECOMMENDATIONS
========================
${recommendations.map((rec, index) => `
${index + 1}. ${rec.title} [${rec.priority.toUpperCase()} PRIORITY]
   Category: ${rec.category}
   Status: ${rec.completed ? 'COMPLETED' : 'PENDING'}
   
   Description:
   ${rec.description}
   
   Estimated Cost: ${rec.estimatedCost}
   Time to Implement: ${rec.timeToImplement}
   
   ${'-'.repeat(60)}
`).join('')}

IMPLEMENTATION ROADMAP
=====================
Phase 1 (Immediate - 0-30 days):
${recommendations.filter(r => r.priority === 'high' && !r.completed).map(r => `‚Ä¢ ${r.title}`).join('\n')}

Phase 2 (Short-term - 1-3 months):
${recommendations.filter(r => r.priority === 'medium' && !r.completed).map(r => `‚Ä¢ ${r.title}`).join('\n')}

Phase 3 (Long-term - 3-6 months):
${recommendations.filter(r => r.priority === 'low' && !r.completed).map(r => `‚Ä¢ ${r.title}`).join('\n')}

COST ANALYSIS
=============
The estimated total investment for implementing all recommendations ranges from the lower bounds of each recommendation. This investment should be viewed as essential protection for your organization's digital assets and business continuity.

NEXT STEPS
==========
1. Review and prioritize recommendations based on your organization's specific needs
2. Allocate budget for high-priority security improvements
3. Begin implementation with Phase 1 recommendations
4. Schedule regular security assessments to maintain protection levels
5. Contact ABP Citadel InfoSec for professional implementation assistance

CONTACT INFORMATION
==================
ABP Citadel InfoSec
Email: security@abp.com
Phone: 1-800-ABP-SECURE
Website: https://abp.com/cybersecurity

This report was generated by ABP's AI Security Assistant. For questions about this assessment or to schedule a consultation with our security experts, please contact us using the information above.

¬© ${new Date().getFullYear()} Aurora Borealis Photonics - ABP Citadel InfoSec Division
All rights reserved. This report is confidential and intended solely for the use of ${assessmentData.companyName || 'the assessed organization'}.
`;
  };

  return (
    <div className="max-w-4xl mx-auto space-y-8">
      {/* Header */}
      <motion.div
        initial={{ opacity: 0, y: -20 }}
        animate={{ opacity: 1, y: 0 }}
        className="text-center"
      >
        <h1 className="text-4xl font-bold text-white mb-4">
          Generate Security Report
        </h1>
        <p className="text-gray-300 text-lg">
          Create a comprehensive PDF report of your security assessment
        </p>
      </motion.div>

      {/* Report Preview */}
      <motion.div
        initial={{ opacity: 0, scale: 0.95 }}
        animate={{ opacity: 1, scale: 1 }}
        transition={{ delay: 0.2 }}
        className="bg-slate-800/50 rounded-xl p-8 border border-slate-600"
      >
        <h2 className="text-2xl font-bold text-white mb-6">Report Contents</h2>
        
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
          <div className="space-y-4">
            <div className="flex items-center space-x-3">
              <span className="text-teal-400 text-xl">üìä</span>
              <span className="text-white">Executive Summary</span>
            </div>
            <div className="flex items-center space-x-3">
              <span className="text-teal-400 text-xl">üîç</span>
              <span className="text-white">Current Security Posture</span>
            </div>
            <div className="flex items-center space-x-3">
              <span className="text-teal-400 text-xl">üìã</span>
              <span className="text-white">Detailed Recommendations</span>
            </div>
          </div>
          
          <div className="space-y-4">
            <div className="flex items-center space-x-3">
              <span className="text-teal-400 text-xl">üó∫Ô∏è</span>
              <span className="text-white">Implementation Roadmap</span>
            </div>
            <div className="flex items-center space-x-3">
              <span className="text-teal-400 text-xl">üí∞</span>
              <span className="text-white">Cost Analysis</span>
            </div>
            <div className="flex items-center space-x-3">
              <span className="text-teal-400 text-xl">üìû</span>
              <span className="text-white">Contact Information</span>
            </div>
          </div>
        </div>

        {/* Report Stats */}
        <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mb-8">
          <div className="bg-slate-700/50 rounded-lg p-4 text-center">
            <div className="text-2xl font-bold text-teal-400">{recommendations.length}</div>
            <div className="text-sm text-gray-300">Recommendations</div>
          </div>
          <div className="bg-slate-700/50 rounded-lg p-4 text-center">
            <div className="text-2xl font-bold text-red-400">
              {recommendations.filter(r => r.priority === 'high').length}
            </div>
            <div className="text-sm text-gray-300">High Priority</div>
          </div>
          <div className="bg-slate-700/50 rounded-lg p-4 text-center">
            <div className="text-2xl font-bold text-blue-400">
              {assessmentData.companySize || 'N/A'}
            </div>
            <div className="text-sm text-gray-300">Company Size</div>
          </div>
          <div className="bg-slate-700/50 rounded-lg p-4 text-center">
            <div className="text-2xl font-bold text-green-400">
              {new Date().toLocaleDateString()}
            </div>
            <div className="text-sm text-gray-300">Report Date</div>
          </div>
        </div>

        {/* Generate Button */}
        <div className="text-center">
          {!isGenerating && !isGenerated && (
            <motion.button
              onClick={generatePDF}
              className="px-8 py-4 bg-gradient-to-r from-teal-400 to-blue-500 text-white rounded-lg hover:from-teal-500 hover:to-blue-600 font-semibold text-lg transition-colors"
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
            >
              Generate PDF Report
            </motion.button>
          )}

          {isGenerating && (
            <div className="flex items-center justify-center space-x-4">
              <motion.div
                className="w-8 h-8 border-4 border-teal-400 border-t-transparent rounded-full"
                animate={{ rotate: 360 }}
                transition={{ duration: 1, repeat: Infinity, ease: "linear" }}
              />
              <span className="text-white text-lg">Generating your report...</span>
            </div>
          )}

          {isGenerated && (
            <motion.div
              initial={{ opacity: 0, scale: 0.9 }}
              animate={{ opacity: 1, scale: 1 }}
              className="space-y-4"
            >
              <div className="text-6xl">‚úÖ</div>
              <h3 className="text-2xl font-bold text-white">Report Generated Successfully!</h3>
              <p className="text-gray-300">
                Your security assessment report has been downloaded to your device.
              </p>
              <div className="flex justify-center space-x-4 mt-6">
                <button
                  onClick={() => setCurrentView('recommendations')}
                  className="px-6 py-3 bg-slate-700 text-white rounded-lg hover:bg-slate-600 transition-colors"
                >
                  Back to Recommendations
                </button>
                <button
                  onClick={generatePDF}
                  className="px-6 py-3 bg-gradient-to-r from-teal-400 to-blue-500 text-white rounded-lg hover:from-teal-500 hover:to-blue-600 font-semibold transition-colors"
                >
                  Generate Another Copy
                </button>
              </div>
            </motion.div>
          )}
        </div>
      </motion.div>

      {/* Back Button */}
      {!isGenerating && !isGenerated && (
        <motion.div
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 0.4 }}
          className="text-center"
        >
          <button
            onClick={() => setCurrentView('recommendations')}
            className="px-6 py-3 bg-slate-700 text-white rounded-lg hover:bg-slate-600 transition-colors"
          >
            Back to Recommendations
          </button>
        </motion.div>
      )}
    </div>
  );
};
