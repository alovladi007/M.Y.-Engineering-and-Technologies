apiVersion: apps/v1
kind: Deployment
metadata:
  name: medimetrics-api
  namespace: medimetrics
  labels:
    app: medimetrics-api
    component: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: medimetrics-api
  template:
    metadata:
      labels:
        app: medimetrics-api
        component: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9100"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: medimetrics-api
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: api
        image: medimetrics/api:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        - containerPort: 9100
          name: metrics
        env:
        - name: NODE_ENV
          value: "production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: medimetrics-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: medimetrics-secrets
              key: redis-url
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: medimetrics-secrets
              key: jwt-secret
        - name: FIELD_ENCRYPTION_KEK
          valueFrom:
            secretKeyRef:
              name: medimetrics-secrets
              key: encryption-key
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: medimetrics-api
  namespace: medimetrics
  labels:
    app: medimetrics-api
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  - port: 9100
    targetPort: 9100
    protocol: TCP
    name: metrics
  selector:
    app: medimetrics-api
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: medimetrics-api
  namespace: medimetrics
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: medimetrics-api
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80